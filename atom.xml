<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Patrick's blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2015-11-03T14:45:39.949Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[Patrick]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2015/11/03/Bootstap%20Layout/"/>
    <id>http://yoursite.com/2015/11/03/Bootstap Layout/</id>
    <published>2015-11-03T14:45:39.949Z</published>
    <updated>2015-11-03T14:45:39.949Z</updated>
    <content type="html"><![CDATA[<p>#Bootstap Layout<br>最近发现使用 <em>Bootstap Layout</em> 可以实现可视化设计网页，刚好拿最近做的一个视频直播系统后台的原型练手。<br><br><em>Bootstap Layout</em> 界面： <br><br><img src="https://app.yinxiang.com/shard/s50/res/06494f1b-f1bc-4a41-87e9-60406a614add/1446453147222.png" alt="Alt text"> <br><br>操作非常简单，只要从左边的元素栏中拖动需要的元素到右边的编辑区就可以了。元素栏有布局系统、基本 CSS、组件、JAVASCRIPT四类元素，Bootstrap支持的所有组件都可以在里面找到。布局系统的分栏可以自行设置，在本例中上面的导航为一行，下面的主题部分我是设为2，10的布局，这样后台的初步框架就实现了。<br><br>然后添加各种元素，例子页面使用的元素有：组件（导航栏、面包屑导航、下拉菜单、翻页）、基本 CSS（表格、搜索框、按钮）、Javascript（导航栏）。<br><br>完成后可以点击预览查看效果。<br><br>调整满意后可以拷贝出代码或者下载HTML文件：<br><br><img src="https://app.yinxiang.com/shard/s50/res/aa28ac29-a286-4dd2-871a-02807685a883/1446453946591.png" alt="Alt text"><br><br>最终的网页：<br><br><img src="https://app.yinxiang.com/shard/s50/res/de932080-34a8-46a6-8c38-92283b0beb67/1446454545708.png" alt="Alt text"><br></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>#Bootstap Layout<br>最近发现使用 <em>Bootstap Layout</em> 可以实现可视化设计网页，刚好拿最近做的一个视频直播系统后台的原型练手。<br><br><em>Bootstap Layout</em> 界面： <br><br><img ]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[一个node.js爬虫程序]]></title>
    <link href="http://yoursite.com/2015/10/28/%E4%B8%80%E4%B8%AAnode.js%E7%88%AC%E8%99%AB%E7%A8%8B%E5%BA%8F/"/>
    <id>http://yoursite.com/2015/10/28/一个node.js爬虫程序/</id>
    <published>2015-10-28T14:04:40.568Z</published>
    <updated>2015-10-28T14:04:40.568Z</updated>
    <content type="html"><![CDATA[<p>通过一段很短的node.js代码，就可以实现一个小的爬虫程序。<br>创建crawler.js程序：</p>
<pre><code><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>)
<span class="keyword">var</span> url = <span class="string">'http://www.imooc.com/learn/348'</span>

http.get(url,<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>{
    <span class="keyword">var</span> html = <span class="string">''</span>

    res.on(<span class="string">'data'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>{
        html += data
    })

    res.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
        <span class="built_in">console</span>.log(html)
    })
}).on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
    <span class="built_in">console</span>.log(<span class="string">'获取课程数据出错！'</span>)
})
</code></pre><p>启动程序：</p>
<pre><code><span class="tag">node</span> <span class="tag">crawler</span><span class="class">.js</span>
</code></pre><p>成功地爬到了慕课网的课程信息。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>通过一段很短的node.js代码，就可以实现一个小的爬虫程序。<br>创建crawler.js程序：</p>
<pre><code><span class="keyword">var</span> http = <span class="built_in">require<]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用Hexo建立博客]]></title>
    <link href="http://yoursite.com/2015/09/22/%E4%BD%BF%E7%94%A8hexo%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%20-%20%E5%89%AF%E6%9C%AC/"/>
    <id>http://yoursite.com/2015/09/22/使用hexo建立博客 - 副本/</id>
    <published>2015-09-22T07:30:16.000Z</published>
    <updated>2015-10-28T14:22:27.208Z</updated>
    <content type="html"><![CDATA[<p>最近想建博客，又发现了一个不错的博客框架Hexo，于是尝试着使用它，中途遇到了一些坑，但是最终还是成功了建立了博客，下面就是我使用Hexo建博客的过程。</p>
<ul>
<li><strong>Hexo介绍</strong></li>
</ul>
<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<ul>
<li><strong>Hexo博客建立</strong></li>
</ul>
<p>简洁高效，如同官网的介绍。安装过程非常简单，官网有非常详细的文档，安装文档；并且还是中文的哦！</p>
<ul>
<li><strong>部署至github</strong></li>
</ul>
<p>安装完成后需要部署至github，根据官网的介绍，首先进行配置</p>
<ul>
<li><strong>hexo-git配置</strong></li>
</ul>
<p>安装hexo-delopyer-git<br>安装hexo关于git管理组件：hexo-delopyer-git</p>
<ul>
<li><strong>修改配置文件</strong></li>
</ul>
<p>找到根目录下的_config.yml，修改配置</p>
<pre><code><span class="attribute">deploy</span>:
    <span class="attribute">type</span>: git
    <span class="attribute">repo</span>: <span class="attribute">https</span>:<span class="comment">//github.com/pyrinelaw/pyrinelaw.github.io.git</span>
    <span class="attribute">branch</span>: master
</code></pre><ul>
<li><p><strong>上传操作</strong></p>
<p> hexo d</p>
</li>
</ul>
<p>部署时遇到了环境变量问题报错，添加以后成功部署。</p>
<pre><code>Error: spawn git ENOENT
    at exports._errnoException (util<span class="class">.js</span>:<span class="number">746</span>:<span class="number">11</span>)
    at Process<span class="class">.ChildProcess</span>._handle<span class="class">.onexit</span> (child_process<span class="class">.js</span>:<span class="number">1053</span>:<span class="number">32</span>)
    at child_process<span class="class">.js</span>:<span class="number">1144</span>:<span class="number">20</span>)
    at process._tickCallback (node<span class="class">.js</span>:<span class="number">355</span>:<span class="number">11</span>)
</code></pre><p>添加Git与git管理库的环境变量即可；</p>
<pre><code>D:<span class="command">\Git</span><span class="command">\bin</span>;D:<span class="command">\Git</span><span class="command">\libexec</span><span class="command">\git</span>-core
</code></pre><ul>
<li><p><strong>再次部署</strong></p>
<p> hexo d</p>
</li>
<li><p><strong>修改主题</strong></p>
</li>
</ul>
<p>hexo-theme提供了很多漂亮的博客主题，选择tranquilpeak，修改配置文件_config.yml，改 theme variable 为 tranquilpeak即可。重新部署就是新的主题了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近想建博客，又发现了一个不错的博客框架Hexo，于是尝试着使用它，中途遇到了一些坑，但是最终还是成功了建立了博客，下面就是我使用Hexo建博客的过程。</p>
<ul>
<li><strong>Hexo介绍</strong></li>
</ul>
<p>Hexo 是一个快]]>
    </summary>
    
  </entry>
  
</feed>
